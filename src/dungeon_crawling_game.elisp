(load-file "window_management.elisp")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Structs
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(cl-defstruct map
  pic
  lighted_pic
  width
  height)

(cl-defstruct lvl
  title
  narrative
  map
  start_loc)

(cl-defstruct game_state
  cur_lvl
  player_loc
  gold
  hp)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Initialization
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq dads_map_pic '(
	      "+-----------------+"
	      "|???|      *|?|???|"
	      "|-- |       |?|???|"
	      "|   |       |?|???|"
	      "|   +#------+ +   |"
	      "|                 |"
	      "+-----------------+"
	      ))

(setq dads_map_lighted_pic '(
	      "+-----------------+"
	      "|^  |       |&|$$$|"
	      "|-- |       | |sSs|"
	      "|   |       | |) /|"
	      "|   +#------+ +   |"
	      "|                 |"
	      "+-----------------+"
	      ))

(setq dads_map
      (make-map
       :pic           dads_map_pic
       :lighted_pic   dads_map_lighted_pic
       :width         (string-width (car dads_map_pic))
       :height        (length dads_map_pic)))

(setq dads_lvl
      (make-lvl
       :title         "Dad's Level"
       :narrative     "You've reached Dad's dungeon. Great treasures await! But be careful ..."
       :map           dads_map
       :start_loc     (cons 1 1)))

(setq game_state
      (make-game_state
       :cur_lvl       dads_lvl
       :player_loc    (lvl-start_loc dads_lvl)
       :gold          100
       :hp            10))

(setq game_buf (get-buffer-create "** Game **"))

;; Character Graphics

(setq       player            "@")
(setq       gold              "$")
(setq       door              "#")
(setq       dark              "?")
(setq       torch             "*")
(setq       key               "&")
(setq       trap              "^")
(setq       dragon            "S")
(setq       mini_dragon       "s")
(setq       sword             "/")
(setq       shield            ")")

;; Functions

(defun start_game ()
  (interactive)
  (switch-to-buffer-other-window game_buf)
;;  (internal-show-cursor nil nil)
  (setq cursor-type nil)
  (redraw))

(defun redraw ()
  (interactive)
  (clear_buffer game_buf)
  (insert ((cur_lvl_get) 'title))
  (mapc
   (lambda (line)
     (insert line "\n"))
   (gethash 'pic (cur_map)))
  (insert )
  (change_map_char (cur_map) (cur_loc_x) (cur_loc_y) player)
  )

(defun change_char (x y char)
  (interactive)
  (goto-line y)
  (forward-char x)
  (delete-char 1)
  (insert char))

(defun change_map_char (map x y char)
  (interactive)
  (change_char x (- (gethash 'height map) y) char))

;; Game Start

(start_game)
