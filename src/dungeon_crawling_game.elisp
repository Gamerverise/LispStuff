(load-file "window_management.elisp")

;; Object-oriented Constructs

(defun def_class (class_name prop_tbl method_tbl)
  )

(defun new (class_name prop_tbl)
  )

;; Map Class

(def_class 'map
  '(pic light_pic width height)
  '(get ...))

;; Dad's Map

(setq dads_map (new 'map))
(setq bens_map (new 'map))

(bens_map 'get 'pic)

(setq game_buf (get-buffer-create "** Game **"))

(setq dads_map_hash (make-hash-table :test 'eq))

(setq dads_map_pic '(
	      "+-----------------+"
	      "|???|      *|?|???|"
	      "|-- |       |?|???|"
	      "|   |       |?|???|"
	      "|   +#------+ +   |"
	      "|@                |"
	      "+-----------------+"
	      ))

(setq dads_map_lighted_pic '(
	      "+-----------------+"
	      "|^  |       |&|$$$|"
	      "|-- |       | |sSs|"
	      "|   |       | |) /|"
	      "|   +#------+ +   |"
	      "|                 |"
	      "+-----------------+"
	      ))

(puthash    'get          (lambda (prop) (gethash prop dads_map)  dads_map_method_tbl)

(puthash    'pic          dads_map_pic                         dads_map_hash)
(puthash    'lighted_pic  dads_map_lighted_pic                 dads_map_hash)
(puthash    'width        (string-width (car dads_map_pic))    dads_map_hash)
(puthash    'height       (length dads_map_pic)                dads_map_hash)

(setq       player            "@")
(setq       gold              "$")
(setq       door              "#")
(setq       dark              "?")
(setq       torch             "*")
(setq       key               "&")
(setq       trap              "^")
(setq       dragon            "S")
(setq       mini_dragon       "s")
(setq       sword             "/")
(setq       shield            ")")

(defun dads_lvl_get (prop)
  (gethash prop dads_lvl_hash))

(setq dads_lvl_hash (make-hash-table :test 'eq))

(puthash    'map              dads_map_hash                dads_lvl_hash)
(puthash    'title            "Dad's Level"           dads_lvl_hash)
(puthash    'start_loc        (cons 1 1)              dads_lvl_hash)
(puthash    'narrative
	    "You've reached Dad's dungeon. Great treasures await! But be careful ..."
	    dads_lvl_hash)

(defun game_state_get (prop)
  (gethash prop game_state_hash))

(setq game_state_hash (make-hash-table :test 'eq))

(puthash    'cur_lvl_get      dads_lvl_get                      game_state_hash)
(puthash    'player_loc       (gethash 'start_loc dads_lvl)     game_state_hash)
(puthash    'gold             0                                 game_state_hash)
(puthash    'hp               10                                game_state_hash)

(defun start_game ()
  (interactive)
  (switch-to-buffer-other-window game_buf)
;;  (internal-show-cursor nil nil)
  (setq cursor-type nil)
  (redraw))

(defun redraw ()
  (interactive)
  (clear_buffer game_buf)
  (insert ((cur_lvl_get) 'title))
  (mapc
   (lambda (line)
     (insert line "\n"))
   (gethash 'pic (cur_map)))
  (insert )
  (change_map_char (cur_map) (cur_loc_x) (cur_loc_y) player)
  )

;; Game State Access

(defun cur_lvl_title ()
  (game_state_get 'cur_lvl)
  ()

(defun cur_lvl_narrative ()
  )

(defun cur_map ()
  (gethash 'map (gethash 'cur_lvl game_state)))

(cur_map)

(defun cur_loc_x ()
  (car (gethash 'player_loc game_state)))

(defun cur_loc_y ()
  (cdr (gethash 'player_loc game_state)))

;; Drawing Functions

(defun change_char (x y char)
  (interactive)
  (goto-line y)
  (forward-char x)
  (delete-char 1)
  (insert char))

(defun change_map_char (map x y char)
  (interactive)
  (change_char x (- (gethash 'height map) y) char))

;; Game Start

(start_game)
